{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","ApplicationException","NegociacaoService","constructor","_http","obtemNegociacoesDaSemana","get","then","dados","map","objeto","Date","data","quantidade","valor","err","obtemNegociacoesDaSemanaAnterior","obtemNegociacoesDaSemanaRetrasada","obtemNegociacoesDoPeriodo","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime","console","log"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,2BAA5B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,oBAAT,QAAqC,oCAArC;;AAEA,WAAaC,iBAAb,GAAO,MAAMA,iBAAN,CAAwB;;AAE3BC,kBAAc;;AAEV,aAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACH;;AAEDM,+BAA2B;;AAEvB,eAAO,KAAKD,KAAL,CACFE,GADE,CACE,0CADF,EAEFC,IAFE,CAGHC,SACIA,MAAMC,GAAN,CAAUC,UACN,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADJ,CAJD,EAOHC,OAAO;;AAEH,kBAAM,IAAId,oBAAJ,CAAyB,iDAAzB,CAAN;AACH,SAVE,CAAP;AAYH;;AAEDe,uCAAmC;;AAE/B,eAAO,KAAKZ,KAAL,CACFE,GADE,CACE,4CADF,EAEFC,IAFE,CAGHC,SAASA,MAAMC,GAAN,CAAUC,UACf,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADK,CAHN,EAMHC,OAAO;;AAEH,kBAAM,IAAId,oBAAJ,CAAyB,0DAAzB,CAAN;AACH,SATE,CAAP;AAWH;;AAEDgB,wCAAoC;;AAEhC,eAAO,KAAKb,KAAL,CACFE,GADE,CACE,6CADF,EAEFC,IAFE,CAGHC,SAASA,MAAMC,GAAN,CAAUC,UACf,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADK,CAHN,EAMHC,OAAO;AACH,kBAAM,IAAId,oBAAJ,CAAyB,2DAAzB,CAAN;AACH,SARE,CAAP;AAUH;;AAEKiB,6BAAN,GAAkC;AAAA;;AAAA;;AAE9B,gBAAI;AACA,oBAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC5B,MAAKhB,wBAAL,EAD4B,EAE5B,MAAKW,gCAAL,EAF4B,EAG5B,MAAKC,iCAAL,EAH4B,CAAZ,CAApB;AAKA,uBAAOE,QACFG,MADE,CACK,UAACC,SAAD,EAAYC,IAAZ;AAAA,2BAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAArB;AAAA,iBADL,EACkD,EADlD,EAEFE,IAFE,CAEG,UAACC,CAAD,EAAIC,CAAJ;AAAA,2BAAUA,EAAEhB,IAAF,CAAOiB,OAAP,KAAmBF,EAAEf,IAAF,CAAOiB,OAAP,EAA7B;AAAA,iBAFH,CAAP;AAIH,aAVD,CAUE,OAAOd,GAAP,EAAY;AACVe,wBAAQC,GAAR,CAAYhB,GAAZ;AACA,sBAAM,IAAId,oBAAJ,CAAyB,kDAAzB,CAAN;AACH;AAf6B;AAgBjC;AApE0B,CAA/B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\nimport { Negociacao } from './Negociacao.js';\nimport { ApplicationException } from '../../util/ApplicationException.js';\n\nexport class NegociacaoService {\n\n    constructor() {\n\n        this._http = new HttpService();\n    }\n\n    obtemNegociacoesDaSemana() {\n\n        return this._http\n            .get('http://localhost:3000/negociacoes/semana')\n            .then(\n            dados =>\n                dados.map(objeto =>\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n            ,\n            err => {\n\n                throw new ApplicationException('Não foi possível obter as negociações da semana');\n            }\n            );\n    }\n\n    obtemNegociacoesDaSemanaAnterior() {\n\n        return this._http\n            .get('http://localhost:3000/negociacoes/anterior')\n            .then(\n            dados => dados.map(objeto =>\n                new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n            ,\n            err => {\n\n                throw new ApplicationException('Não foi possível obter as negociações da semana anterior');\n            }\n            );\n    }\n\n    obtemNegociacoesDaSemanaRetrasada() {\n\n        return this._http\n            .get('http://localhost:3000/negociacoes/retrasada')\n            .then(\n            dados => dados.map(objeto =>\n                new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n            ,\n            err => {\n                throw new ApplicationException('Não foi possível obter as negociações da semana retrasada');\n            }\n            );\n    }\n\n    async obtemNegociacoesDoPeriodo() {\n\n        try {\n            let periodo = await Promise.all([\n                this.obtemNegociacoesDaSemana(),\n                this.obtemNegociacoesDaSemanaAnterior(),\n                this.obtemNegociacoesDaSemanaRetrasada()\n            ]);\n            return periodo\n                .reduce((novoArray, item) => novoArray.concat(item), [])\n                .sort((a, b) => b.data.getTime() - a.data.getTime());\n\n        } catch (err) {\n            console.log(err);\n            throw new ApplicationException('Não foi possível obter as negociações do período')\n        };\n    }\n}"]}